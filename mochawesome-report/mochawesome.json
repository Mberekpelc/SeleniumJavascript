{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2025-02-03T16:04:33.880Z",
    "end": "2025-02-03T16:04:43.911Z",
    "duration": 10031,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0cdef11b-b331-4462-879c-ab4fd54855d6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cb329574-1467-4b6c-9130-c198d56a4a4e",
          "title": "testing the use of mocha",
          "fullFile": "/Users/Lawrence.Mberekpe/Workspace/SeleniumTraining/SeleniumJavascript/test/Testmocha.js",
          "file": "/test/Testmocha.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add tod",
              "fullTitle": "testing the use of mocha successfully add tod",
              "timedOut": null,
              "duration": 6167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = new Builder().forBrowser('firefox').build();\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\nawait driver.findElement(By.xpath(\"//input[@id='sampletodotext']\")).sendKeys(\"learn-selenium\", Key.RETURN);\nlet todotext = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n    .then(function (value) {\n        return value\n    });\n//assert.strictEqual(todotext, 'learn-selenium');  // (node assertion)\ntodotext.should.equal('learn-selenium');\nawait driver.quit();",
              "err": {},
              "uuid": "d3da81bc-4ac5-494d-97e0-817112d413b2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3da81bc-4ac5-494d-97e0-817112d413b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6167,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "cebf72ed-59ec-4674-8099-f43eb082c73a",
          "title": " second testing the use of mocha",
          "fullFile": "/Users/Lawrence.Mberekpe/Workspace/SeleniumTraining/SeleniumJavascript/test/Testmocha2.js",
          "file": "/test/Testmocha2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully add another tod",
              "fullTitle": " second testing the use of mocha successfully add another tod",
              "timedOut": null,
              "duration": 5264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = new Builder().forBrowser('firefox').build();\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\nawait driver.findElement(By.xpath(\"//input[@id='sampletodotext']\")).sendKeys(\"learn-selenium\", Key.RETURN);\nlet todotext = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n    .then(function (value) {\n        return value\n    });\n//assert.strictEqual(todotext, 'learn-selenium');  // (node assertion)\ntodotext.should.equal('learn-selenium');\nawait driver.quit();",
              "err": {},
              "uuid": "26de7c20-1fae-464c-99f6-d964a8bdbdcc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully add another for reporter tod",
              "fullTitle": " second testing the use of mocha successfully add another for reporter tod",
              "timedOut": null,
              "duration": 3930,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver = new Builder().forBrowser('firefox').build();\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\nawait driver.findElement(By.xpath(\"//input[@id='sampletodotext']\")).sendKeys(\"learn-selenium\", Key.RETURN);\nlet todotext = await driver.findElement(By.xpath(\"//li[last()]\")).getText()\n    .then(function (value) {\n        return value\n    });\n//assert.strictEqual(todotext, 'learn-selenium');  // (node assertion)\ntodotext.should.equal('learn-Java');\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'learn-selenium' to equal 'learn-Java'",
                "estack": "AssertionError: expected 'learn-selenium' to equal 'learn-Java'\n    at Context.<anonymous> (test/Testmocha2.js:31:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- learn-selenium\n+ learn-Java\n"
              },
              "uuid": "bcb2cb5f-9324-4699-ae86-b366b1afe5d5",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26de7c20-1fae-464c-99f6-d964a8bdbdcc"
          ],
          "failures": [
            "bcb2cb5f-9324-4699-ae86-b366b1afe5d5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9194,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFileName": "testresults"
      },
      "version": "6.2.0"
    }
  }
}